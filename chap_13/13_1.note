13-1 文件与流

标准流：
	stdin
	stdout
	stderr

FILE型
	stdin、stdout、stderr都是指向FILE型的指针
	FILE型是在<stdio.h>中定义的

fopen():
头文件<stdio.h>
原型：FILE *fopen(const char *filename, const char *mode);
mode,包含以下类型：
r:以只读模式打开文本文件
w:以只写模式建立文本文件，若文件存在则文件长度清为0
a:以追加模式（从文件末尾处开始的只写模式）打开或建立文本文件
rb:以只读模式打开二进制文件
wb:以只写模式建立二进制文件，若文件存在则文件长度清为0
ab:以追加模式（从文件末尾处开始的只写模式）打开或建立二进制文件
r+:以更新模式（读写模式）打开文本文件
w+:以更新（读写）模式建立文本文件，若文件存在则文件长度清空为0
a+:以追加模式（从文件末尾处开始写入的更新模式）打开或建立文本文件
rb+:以更新（读写）模式打开二进制文件
wb+:以更新（读写）模式建立二进制文件，若文件存在则文件长度清为0
ab+:以追加模式（从文件末尾处开始写入的更新模式）打开或建立二进制文件

总结：
	r——读
	w——写
	b——二进制
	a——追加
	+：更新（读写）

	输入、输出是针对程序为中心而言的，那么这时的输出就是指向文件输出/输入就是指从文件输入

fclose():
头文件：<stdio.h>
原型：  int fclose(FILE *stream);

示例程序13_1.c

fscanf:
与scanf很像，应该说fscanf是更加一般的函数，fscanf的第一个参数指定输入来源的流（通过指向FILE指针），那么如果实参是stdin，则就是指从标准输入流中获得输入（也就是scanf的功能）

fprintf:
与printf十分型相似，只不过，fprintf更一般，向任何流执行同样的操作

明天的计划：
1. 习题13-4
2. 练习13-5
3. 查询C语言中关于随机数的库函数
